name: Generate English PDF

on:
  push:
    branches: [main, master]
  workflow_dispatch:  # Allows manual triggering

jobs:
  generate:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          pip install weasyprint markdown
          sudo apt-get update
          sudo apt-get install -y fonts-liberation fonts-roboto
      
      - name: Generate PDF
        run: |
          # Create HTML header
          cat > The-Standard-English.html << 'EOL'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>The Standard</title>
            <style>
              @page { size: A4; margin: 1.5cm; }
              body { 
                font-family: 'Roboto', 'Liberation Sans', Arial, sans-serif;
                line-height: 1.6;
                color: #333;
              }
              h1, h2, h3, h4, h5, h6 { 
                color: #2c3e50;
                page-break-after: avoid;
                margin-top: 1em;
              }
              h1:not(:first-child) { page-break-before: always; }
              p, blockquote, ul, ol, dl, table { 
                margin-bottom: 1em;
                page-break-inside: avoid;
              }
              img {
                max-width: 100%;
                display: block;
                margin: 0 auto;
              }
              code {
                font-family: monospace;
                background-color: #f5f5f5;
                padding: 0.2em 0.4em;
                border-radius: 3px;
                font-size: 0.9em;
              }
              pre {
                background-color: #f5f5f5;
                padding: 1em;
                border-radius: 5px;
                overflow-x: auto;
                line-height: 1.4;
                white-space: pre-wrap;
              }
              a { color: #3498db; text-decoration: none; }
              table { 
                width: 100%;
                border-collapse: collapse;
                margin: 2em 0;
              }
              th, td {
                padding: 0.5em;
                border: 1px solid #ddd;
                text-align: left;
              }
              thead { background-color: #f2f2f2; }
              .page-break { page-break-after: always; }
            </style>
          </head>
          <body>
            <header>
              <h1 style="text-align: center;">The Standard</h1>
            </header>
          EOL
          
          # Find and process all markdown files
          separator='<div class="page-break"></div>'
          
          # Process each markdown file
          for file in $(find . -name "*.md" -not -path "./README.md" | sort -fg); do
            echo "Processing $file"
            
            # Convert markdown to HTML using Python's markdown module
            python3 -c "
import markdown
import sys
with open('$file', 'r', encoding='utf-8') as f:
    content = f.read()
html = markdown.markdown(content, extensions=['tables', 'fenced_code', 'toc'])
with open('$file.html', 'w', encoding='utf-8') as f:
    f.write(html)
            "
            
            # Append to main HTML file
            cat "$file.html" >> The-Standard-English.html
            echo "$separator" >> The-Standard-English.html
          done
          
          # Close HTML file
          echo "</body></html>" >> The-Standard-English.html
          
          # Convert HTML to PDF
          weasyprint The-Standard-English.html The-Standard-English.pdf
          
          # Check if PDF was generated
          if [ -f "The-Standard-English.pdf" ]; then
            echo "PDF successfully generated"
            ls -la The-Standard-English.pdf
          else
            echo "PDF generation failed"
            exit 1
          fi
      
      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: the-standard-english
          path: The-Standard-English.pdf
          retention-days: 30